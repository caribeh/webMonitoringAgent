name: Pipeline de Build e Push do Web Monitoring Agent

# Gatilhos para iniciar a pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout do Código
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      # 2. Lint do Código Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Instalar dependências de lint
        run: pip install flake8
      - name: Rodar Flake8
        # Assumindo que o código do agente está em agent/agent.py
        run: flake8 agent/ --count --show-source --statistics

      # 3. Login no GitHub Container Registry (GHCR)
      - name: Login no GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Preparar Metadados da Imagem (Converter para Lowercase)
      - name: Gerar tags da imagem em minúsculas
        id: meta
        # A tag da imagem será .../webmonitoringagent/monitoring-agent:latest
        run: echo "TAGS=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')/monitoring-agent:latest" >> $GITHUB_OUTPUT

      # 5. Configurar o Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 6. Construir e Publicar a Imagem Docker
      - name: Build e Push da imagem do agente
        uses: docker/build-push-action@v4
        with:
          context: ./agent
          file: ./agent/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.TAGS }}